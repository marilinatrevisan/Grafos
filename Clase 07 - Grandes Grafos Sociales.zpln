{
  "paragraphs": [
    {
      "text": "print(s\"\"\"%html\n<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"$baseDir/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<center>\n    <h1><a href=\"http://diplodatos.famaf.unc.edu.ar/\">Diplomatura en Ciencia de Datos, Aprendizaje Automático y sus Aplicaciones</a></h1>\n    <h2>Curso <a href=\"https://sites.google.com/view/eleccion-optativas-diplodatos/programaci%C3%B3n-distribu%C3%ADda-sobre-grandes-vol%C3%BAmenes-de-datos\">Programación Distribuida sobre Grandes Volúmenes de Datos</a></h2>\n</center>\n\n<br>\n\n<h3 style=\"text-align:center;\"> Damián Barsotti  </h3>\n\n<h3 style=\"text-align:center;\">\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    Facultad de Matemática Astronomía Física y Computación\n    </a>\n<br/>\n    <a href=\"http://www.unc.edu.ar\">\n    Universidad Nacional de Córdoba\n    </a>\n<br/>\n    <center>\n    <a href=\"http://www.famaf.unc.edu.ar\">\n    <img src=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases/comun/logo%20UNC%20FAMAF%202016.png\" alt=\"Drawing\" style=\"width:50%;\"/>\n    </a>\n    </center>\n</h3>\n\n<p style=\"font-size:15px;\">\n    <br />\n        This work is licensed under a\n        <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n    <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">\n        <img alt=\"Creative Commons License\" style=\"border-width:0;vertical-align:middle;float:right\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" />\n    </a>\n</p>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438071_158221671",
      "id": "20171010-191319_1407757246",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:133008"
    },
    {
      "title": "Antes de comenzar",
      "text": "%md\n### Antes de comenzar\n1. Lanzar terminal\n1. Actualizar repo:\n```sh\ncd diplodatos_bigdata\ngit pull\n```\n1. Lanzar [Zeppelin](http://zeppelin.apache.org/) en docker:\n```sh\n./docker/zeppelin.sh\n```\n1. En navegador abrir [http://localhost:8080](http://localhost:8080)\n1. Seleccionar `Import note`\n1. Elegir json en `diplodatos_bigdata/clases/07_grafos/note.zpln`\n2. Seleccionar `Clase 07 - Grandes Grafos Sociales`\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "title": false,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Antes de comenzar</h3>\n<ol>\n<li>Lanzar terminal</li>\n<li>Actualizar repo:</li>\n</ol>\n<pre><code class=\"language-sh\">cd diplodatos_bigdata\ngit pull\n</code></pre>\n<ol>\n<li>Lanzar <a href=\"http://zeppelin.apache.org/\">Zeppelin</a> en docker:</li>\n</ol>\n<pre><code class=\"language-sh\">./docker/zeppelin.sh\n</code></pre>\n<ol>\n<li>En navegador abrir <a href=\"http://localhost:8080\">http://localhost:8080</a></li>\n<li>Seleccionar <code>Import note</code></li>\n<li>Elegir json en <code>diplodatos_bigdata/clases/07_grafos/note.zpln</code></li>\n<li>Seleccionar <code>Clase 07 - Grandes Grafos Sociales</code></li>\n</ol>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_1520325028",
      "id": "20171026-104737_1316799732",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133009"
    },
    {
      "text": "%md\n# Grandes Grafos Sociales",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h1>Grandes Grafos Sociales</h1>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_554805849",
      "id": "20171101-121050_1177283744",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133010"
    },
    {
      "text": "%md\n## GraphFrames\n\n* Utiliza la interface Spark SQL (Dataframes).\n* Creada por [Databricks](https://databricks.com/).\n* Por ahora no viene en la distribución estandard de Spark (solo [GraphX](http://spark.apache.org/graphx/) sobre RDD's).\n* Algoritmos ya implementados como: \n    - Breadth-first search (BFS)\n    - Componentes (fuertemente) conexas\n    - Label Propagation Algorithm (para detectar comunidades)\n    - PageRank\n    - Shortest paths\n    - Triangle count.\n* **Agregación de mensajes** para hacer algoritmos.\n* **Motif finding** para queries. \n\n### Documentación:\n\n* [User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html).\n* [User Guide - Python](https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html).\n* [Documentación de la API](https://graphframes.github.io/graphframes/docs/_site/api/python/index.html).\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>GraphFrames</h2>\n<ul>\n  <li>Utiliza la interface Spark SQL (Dataframes).</li>\n  <li>Creada por <a href=\"https://databricks.com/\">Databricks</a>.</li>\n  <li>Por ahora no viene en la distribución estandard de Spark (solo <a href=\"http://spark.apache.org/graphx/\">GraphX</a> sobre RDD&rsquo;s).</li>\n  <li>Algoritmos ya implementados como:\n    <ul>\n      <li>Breadth-first search (BFS)</li>\n      <li>Componentes (fuertemente) conexas</li>\n      <li>Label Propagation Algorithm (para detectar comunidades)</li>\n      <li>PageRank</li>\n      <li>Shortest paths</li>\n      <li>Triangle count.</li>\n    </ul>\n  </li>\n  <li><strong>Agregación de mensajes</strong> para hacer algoritmos.</li>\n  <li><strong>Motif finding</strong> para queries.</li>\n</ul>\n<h3>Documentación:</h3>\n<ul>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html\">User Guide</a>.</li>\n  <li><a href=\"https://docs.databricks.com/spark/latest/graph-analysis/graphframes/user-guide-python.html\">User Guide - Python</a>.</li>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/index.html\">Documentación de la API</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_809566809",
      "id": "20171102-112550_410534992",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133011"
    },
    {
      "text": "%md\n### Creación de grafo\n\n* Se crean a partir de `DataFrame` de aristas y/o vértices.\n* DataFrame de aristas debe tener las columnas `src` y `dst` (por lo menos).\n* DataFrame de vértices debe tener la columna `id` (por lo menos).\n* Los grafos son dirigidos.\n* Se almacenan con redundancia (vertex cut):\n  ![](http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png)\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Creación de grafo</h3>\n<ul>\n  <li>Se crean a partir de <code>DataFrame</code> de aristas y/o vértices.</li>\n  <li>DataFrame de aristas debe tener las columnas <code>src</code> y <code>dst</code> (por lo menos).</li>\n  <li>DataFrame de vértices debe tener la columna <code>id</code> (por lo menos).</li>\n  <li>Los grafos son dirigidos.</li>\n  <li>Se almacenan con redundancia (vertex cut):<br/> <img src=\"http://spark.apache.org/docs/latest/img/edge_cut_vs_vertex_cut.png\" /></li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_727197494",
      "id": "20181027-002925_1222103561",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133012"
    },
    {
      "text": "%md\n### Veamos un ejemplo:\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Veamos un ejemplo:</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_1292363804",
      "id": "20201030-111511_962191836",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133013"
    },
    {
      "text": "%pyspark\n\nfrom graphframes import *\n\n# DataFrame de vértices\nv = spark.createDataFrame([\n  (\"a\", \"Alice\", 34),\n  (\"b\", \"Bob\", 36),\n  (\"c\", \"Charlie\", 30),\n  (\"d\", \"David\", 29),\n  (\"e\", \"Esther\", 32),\n  (\"f\", \"Fanny\", 36),\n  (\"g\", \"Gabby\", 60)\n],[\"id\", \"name\", \"age\"])\n\n# DataFrame de aristas\ne = spark.createDataFrame([\n  (\"a\", \"b\", \"amigo\"),\n  (\"b\", \"c\", \"sigue\"),\n  (\"c\", \"b\", \"sigue\"),\n  (\"f\", \"c\", \"sigue\"),\n  (\"e\", \"f\", \"sigue\"),\n  (\"e\", \"d\", \"amigo\"),\n  (\"d\", \"a\", \"amigo\"),\n  (\"a\", \"e\", \"amigo\"),\n  (\"a\", \"h\", \"amigo\")\n], [\"src\", \"dst\", \"relationship\"])\n\n# Creacion de GraphFrame\ng = GraphFrame(v, e)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:38:58+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438072_347636967",
      "id": "20181027-003337_2137373030",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:38:58+0000",
      "dateFinished": "2022-11-11T23:40:34+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133014"
    },
    {
      "text": "%pyspark\n\nz.show(g.vertices)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:47:59+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 304,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=0",
              "$$hashKey": "object:133853"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=1",
              "$$hashKey": "object:133854"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=2",
              "$$hashKey": "object:133855"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_2138746889",
      "id": "20181027-004033_1700498403",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:47:59+0000",
      "dateFinished": "2022-11-11T23:48:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133015"
    },
    {
      "text": "%pyspark\n\nz.show(g.edges)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:48:05+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 356,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=3",
              "$$hashKey": "object:133895"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=4",
              "$$hashKey": "object:133896"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=5",
              "$$hashKey": "object:133897"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_510878208",
      "id": "20181027-004041_1915960464",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:48:05+0000",
      "dateFinished": "2022-11-11T23:48:14+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133016"
    },
    {
      "text": "%pyspark\n\n# Query: Get in-degree of each vertex.\nz.show(g.inDegrees)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:48:21+0000",
      "progress": 62,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "inDegree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tinDegree\nf\t1\ne\t1\nh\t1\nd\t1\nc\t2\nb\t2\na\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=6",
              "$$hashKey": "object:133937"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=7",
              "$$hashKey": "object:133938"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=8",
              "$$hashKey": "object:133939"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=9",
              "$$hashKey": "object:133940"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=10",
              "$$hashKey": "object:133941"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_1514954139",
      "id": "20191205-202553_1454342767",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:48:21+0000",
      "dateFinished": "2022-11-11T23:48:35+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133017"
    },
    {
      "text": "%pyspark\n\n\n# Query: Count the number of \"follow\" connections in the graph.\n\nprint(\"Cantidad de amistades:\", \n        g.edges.filter(\"relationship = 'amigo'\").count())\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:48:23+0000",
      "progress": 88,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de amistades: 5\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=11",
              "$$hashKey": "object:133966"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_981772241",
      "id": "20191205-202527_215305701",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:48:23+0000",
      "dateFinished": "2022-11-11T23:48:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133018"
    },
    {
      "text": "%pyspark\n\n# Descargo las tablas anteriores como csvs\n# coalesce reduce la cantidad de particiones a 1 (para generar 1 solo csv)\n\nfrom pyspark.sql.functions import col\n\n# Tabla de vértices\ng.vertices \\\n    .select(\"*\",col(\"name\").alias(\"Label\")) \\\n    .coalesce(1) \\\n    .write \\\n    .csv(\"logs/friends.csv\", mode=\"overwrite\", header=True)\n        \n#Tabla de aristas\ng.edges.select(col(\"src\").alias(\"Source\"),\n               col(\"dst\").alias(\"Target\"),\n               \"relationship\") \\\n       .coalesce(1) \\\n       .write \\\n       .csv(\"logs/friends_rel.csv\", mode=\"overwrite\", header=True)",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:48:57+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=14",
              "$$hashKey": "object:133978"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=15",
              "$$hashKey": "object:133979"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769619724_57588481",
      "id": "paragraph_1667769619724_57588481",
      "dateCreated": "2022-11-06T21:20:19+0000",
      "dateStarted": "2022-11-11T23:48:57+0000",
      "dateFinished": "2022-11-11T23:49:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133019"
    },
    {
      "text": "%md\n### PageRank\n\n#### Se calcula el Page Rank de cada página: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$\n* donde \\\\(N\\\\) es la cantidad de paginas, \n* \\\\(\\epsilon\\\\) es la probabilidad de quedarse en la pagina (*reset probability*), \n* \\\\(M(p_i)\\\\) son las páginas que apuntan a \\\\(p_i\\\\) y \n* \\\\(L(p_j)\\\\) es la cantidad e links de la página \\\\(p_j\\\\).\n\n\n![](https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png)\n\n\nMás info en [PageRank](https://es.wikipedia.org/wiki/PageRank).",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>PageRank</h3>\n<h4>Se calcula el Page Rank de cada página: $$PR(p_i) = \\frac{\\epsilon}{N} + (1-\\epsilon) \\sum_{p_j \\in M(p_i)} \\frac{PR (p_j)}{L(p_j)}$$</h4>\n<ul>\n<li>donde \\(N\\) es la cantidad de paginas,</li>\n<li>\\(\\epsilon\\) es la probabilidad de quedarse en la pagina (<em>reset probability</em>),</li>\n<li>\\(M(p_i)\\) son las páginas que apuntan a \\(p_i\\) y</li>\n<li>\\(L(p_j)\\) es la cantidad e links de la página \\(p_j\\).</li>\n</ul>\n<p><img src=\"https://bitbucket.org/bigdata_famaf/diplodatos_bigdata/raw/HEAD/clases/00_introduccion/page_rank.png\" alt=\"\" /></p>\n<p>Más info en <a href=\"https://es.wikipedia.org/wiki/PageRank\">PageRank</a>.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_776809410",
      "id": "paragraph_1634844119648_1955861883",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133020"
    },
    {
      "title": "PageRank",
      "text": "%pyspark\n\n# Run PageRank algorithm, and show results.\nresults = g.pageRank(resetProbability=0.01, maxIter=10)\n\nz.show(results.vertices.select(\"id\", \"pagerank\"))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:49:09+0000",
      "progress": 1,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": false,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "pagerank1",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "pagerank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tpagerank\ng\t0.011647254575707162\nb\t3.6199424699159937\ne\t0.03848486478566412\na\t0.05421739436354941\nf\t0.0347707909956736\nd\t0.0347707909956736\nc\t3.206166434367738\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=16",
              "$$hashKey": "object:134029"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=17",
              "$$hashKey": "object:134030"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=18",
              "$$hashKey": "object:134031"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=19",
              "$$hashKey": "object:134032"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=20",
              "$$hashKey": "object:134033"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=21",
              "$$hashKey": "object:134034"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=22",
              "$$hashKey": "object:134035"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=23",
              "$$hashKey": "object:134036"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=24",
              "$$hashKey": "object:134037"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=25",
              "$$hashKey": "object:134038"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=26",
              "$$hashKey": "object:134039"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=27",
              "$$hashKey": "object:134040"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=28",
              "$$hashKey": "object:134041"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=29",
              "$$hashKey": "object:134042"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=30",
              "$$hashKey": "object:134043"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=31",
              "$$hashKey": "object:134044"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=32",
              "$$hashKey": "object:134045"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=33",
              "$$hashKey": "object:134046"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=34",
              "$$hashKey": "object:134047"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_1242085283",
      "id": "20191205-202719_809801770",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:49:09+0000",
      "dateFinished": "2022-11-11T23:52:01+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133021"
    },
    {
      "title": "Guardemos el grafo",
      "text": "%pyspark\nfrom pyspark.sql.functions import col\n\ng.edges.printSchema()\n\ng.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"relationship\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"logs/g_edges.csv\", mode=\"overwrite\", header=True)\n\n# Ver que pasa sin coalesce\n# Agregué \"logs/\" antes del nombre del csv para verlo local",
      "user": "anonymous",
      "dateUpdated": "2022-11-11T23:49:19+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=35",
              "$$hashKey": "object:134100"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438073_377979780",
      "id": "20201029-163912_1652236873",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-11T23:49:19+0000",
      "dateFinished": "2022-11-11T23:52:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133022"
    },
    {
      "text": "%pyspark\n# Sin coalesce\n\nfrom pyspark.sql.functions import col\n\ng.edges.printSchema()\n\ng.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"relationship\") \\\n        .write \\\n        .csv(\"logs/g_edges_sincoalesce.csv\", mode=\"overwrite\", header=True)\n\n# Se generaron 8 csvs al correr esta celda",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:03:22+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=36",
              "$$hashKey": "object:134117"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667774014458_1120804298",
      "id": "paragraph_1667774014458_1120804298",
      "dateCreated": "2022-11-06T22:33:34+0000",
      "dateStarted": "2022-11-12T00:03:22+0000",
      "dateFinished": "2022-11-12T00:03:25+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133023"
    },
    {
      "text": "%md\n## Ejemplo Red de Usuarios Twitter",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Red de Usuarios Twitter</h2>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438074_1639616825",
      "id": "20181024-105040_178046617",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133024"
    },
    {
      "title": "Load Tweets",
      "text": "%pyspark\n\ntweets = spark.read.parquet(\"../../diplodatos_bigdata/ds/tweets.pqt\")\n\nprint(\"Cantidad de tweets:\", tweets.count())\n\nz.show(tweets.limit(10))\n# RT_times es la cantidad de veces que el usuario retweeteo el tweet\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:03:29+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "timestamp0",
                        "visible": true,
                        "width": 180,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "user1",
                        "visible": true,
                        "width": 153,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "RT_by2",
                        "visible": true,
                        "width": 150,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "RT_times3",
                        "visible": true,
                        "width": 150,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "text4",
                        "visible": true,
                        "width": 393,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "timestamp": "string",
                      "user": "string",
                      "RT_by": "string",
                      "RT_times": "string",
                      "text": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de tweets: 172040\n\n"
          },
          {
            "type": "TABLE",
            "data": "timestamp\tuser\tRT_by\tRT_times\ttext\n1487970896\tierrejon\tteresapititesa\t2\tRT @ierrejon: Aulas masificadas, falta de profesorado, precariedad laboral para docentes... ¿Así pretende el PP garantizar el fut…\n1487971010\tRobiBaradel\titoferrero\t1\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971052\tvilma_ripoll\tPabloIannuzzi\t3\tRT @vilma_ripoll: Los \"voluntarios\"contra el paro docente, son carneros. Los docentes defienden su salario y la escuela pública. Apoyemos e…\n1487971121\tfargosi\tPiaAsao\t3\tRT @fargosi: Hay otros medios de protesta. Las huelgas docentes son inconstitucionales por las convenciones de Derechos del Niño. Jueces, a…\n1487971177\tGFrondizi\ttepergmailcomP1\t3\tRT @GFrondizi: Pido algún fiscal por incumplimiento del deber de educar a los niños de la nación Pena con cárcel p baradel Exijo q…\n1487971184\tRobiBaradel\tAnaliavc1\t41\tRT @RobiBaradel: Nos parece muy sano que los ciudadanos sumen su tiempo y su compromiso a la Educación Pública, los esperamos todo e…\n1487971345\tSuperSecretario\tari2271\t12\tRT @SuperSecretario: #Cambiemos sacó solo 1,5% pq en su spot no prometió Voluntarios para reemplazar Docentes. Si se avivaban arrasaban!  h…\n1487971368\tMarinaVolpe12\tBocaLocura312\t1\tRT @MarinaVolpe12: No se ofrezcan nunca como Médicos voluntarios.Si hacen como MM, te saca el hígado y pide disculpas xq se equivovó #Volun…\n1487971408\tlanacionmas\tsusanamartimari\t2\tRT @lanacionmas: ¿Qué opinás de la propuesta #VoluntarioDocenteNoAlParo que se generó en las redes sociales a partir del paro nacional? #La…\n1487971469\taeronauticosCFK\tandrea7533\t17\tRT @aeronauticosCFK: #ApoyoALosMaestros Para estas cosas sobra la guita. Son patéticos https://t.co/6BW6eGZYpT\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=37",
              "$$hashKey": "object:134170"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=38",
              "$$hashKey": "object:134171"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=39",
              "$$hashKey": "object:134172"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438074_893129093",
      "id": "20171101-124010_495006264",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:03:29+0000",
      "dateFinished": "2022-11-12T00:03:33+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133025"
    },
    {
      "text": "%md\n### Definición de la red de usuarios:\n\n* Queremos que un **usuario A esté conectado con usuario B** si B retweeteó un mensaje de A.\n* Queremos también la cantidad de retweets que hizo B de mensajes de A **distintos o no**.",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Definición de la red de usuarios:</h3>\n<ul>\n<li>Queremos que un <strong>usuario A esté conectado con usuario B</strong> si B retweeteó un mensaje de A.</li>\n<li>Queremos también la cantidad de retweets que hizo B de mensajes de A <strong>distintos o no</strong>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438074_1390335877",
      "id": "20181024-111922_1953182558",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133026"
    },
    {
      "title": "Generamos las conecciones por usuarios",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum, count\n\ntwitterConnections = tweets \\\n                        .groupBy(\"user\", \"RT_by\") \\\n                        .agg(sum(\"RT_times\").alias(\"count_RT\"), count(\"*\").alias(\"count_distinct_RT\"))\n\nprint(\"Cantidad de conecciones:\", twitterConnections.count())\n\nz.show(twitterConnections.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:03:42+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          },
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "user": "string",
                      "RT_by": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de conecciones: 152613\n\n"
          },
          {
            "type": "TABLE",
            "data": "user\tRT_by\tcount_RT\tcount_distinct_RT\nWolffWaldo\txenia43sailor\t69\t1\natlanticsurff\tpaulobeni\t8\t1\nRuben_Rischmann\tPPperonoelsapo\t23\t1\nWolffWaldo\tMariePes72\t14\t1\nromerodiario\tRcaRawson\t4\t1\npablen2012\tNattyJuliAle\t4\t1\nMaestroPortenio\tsamuelevyARG\t14\t1\nLaAlfareraOk\taka_Mister\t33\t1\nertenembaum\tfertso\t4\t1\nBrujaUniversal\tO_Fer_\t6\t1\nmis2centavos\tmapolo1978\t2\t1\nlucaslauriente\t_Felpa_\t1\t1\nPajaritaTW\toscarcapellini\t6\t1\nArgentinaSoy1\t88lamaga\t82\t1\nel_telegrafo\tamaia78\t1\t1\nDEM___\taquisiclaudia\t79\t1\nLauraadri\tarturomakko\t12\t1\nscorohernan\tgustavospektor\t6\t1\nCondenaNacional\tSyl_Vicious\t3\t1\nhanalfabeto\tOsvaM55\t18\t2\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=40",
              "$$hashKey": "object:134229"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=41",
              "$$hashKey": "object:134230"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438074_2030792653",
      "id": "20171101-121958_1394663112",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:03:42+0000",
      "dateFinished": "2022-11-12T00:03:51+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133027"
    },
    {
      "title": "Hay que renombrar las conexiones de tweeter:",
      "text": "%pyspark\n\nfrom pyspark.sql.functions import col\n\nedgesDF = twitterConnections \\\n    .select(col(\"user\").alias(\"src\"), \n            col(\"RT_by\").alias(\"dst\"),\n            \"count_RT\", \"count_distinct_RT\")\n                                       \nz.show(edgesDF.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:03:59+0000",
      "progress": 37,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "count_RT": "string",
                      "count_distinct_RT": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\tcount_RT\tcount_distinct_RT\nWolffWaldo\txenia43sailor\t69\t1\natlanticsurff\tpaulobeni\t8\t1\nRuben_Rischmann\tPPperonoelsapo\t23\t1\nWolffWaldo\tMariePes72\t14\t1\nromerodiario\tRcaRawson\t4\t1\npablen2012\tNattyJuliAle\t4\t1\nMaestroPortenio\tsamuelevyARG\t14\t1\nLaAlfareraOk\taka_Mister\t33\t1\nertenembaum\tfertso\t4\t1\nBrujaUniversal\tO_Fer_\t6\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=42",
              "$$hashKey": "object:134268"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438074_1528683859",
      "id": "20171101-124136_101875926",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:03:59+0000",
      "dateFinished": "2022-11-12T00:04:00+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133028"
    },
    {
      "title": "Hay que crear el DF de vértices",
      "text": "%pyspark\n\nsrcs = edgesDF.select(col(\"src\").alias(\"id\"))\n\ndsts = edgesDF.select(col(\"dst\").alias(\"id\"))\n    \nvertexDF = srcs.unionAll(dsts).distinct()\n\nz.show(vertexDF.limit(10))\n    ",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:04:00+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "id0",
                        "visible": true,
                        "width": 334,
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\nElGorilaje\nflordecaribe\nl_p_o\nPiru_laura\nbudano_ignacio\nRepettoLidia\nLilianaTren\ndefensoria_bol\nMIGUE67MIGUE\ncarlito60322427\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=43",
              "$$hashKey": "object:134304"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_1542122565",
      "id": "20191206-163757_2138250663",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:04:00+0000",
      "dateFinished": "2022-11-12T00:04:13+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133029"
    },
    {
      "title": "Creación de GraphFrame:",
      "text": "%pyspark\n\nfrom graphframes import *\n\ngraph = GraphFrame(vertexDF, edgesDF).cache()\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:04:20+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_873496286",
      "id": "20171101-124739_82230555",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:04:20+0000",
      "dateFinished": "2022-11-12T00:04:21+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133030"
    },
    {
      "text": "%md\n### Operaciones básicas sobre grafos\n\n#### A continuación veremos como calcular: \n* la cantidad de vértices (usuarios)\n* la cantidad de arístas (conexiones)\n* el grado de cada vértice (cantidad de conexiones por usuario)",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Operaciones básicas sobre grafos</h3>\n<h4>A continuación veremos como calcular:</h4>\n<ul>\n  <li>la cantidad de vértices (usuarios)</li>\n  <li>la cantidad de arístas (conexiones)</li>\n  <li>el grado de cada vértice (cantidad de conexiones por usuario)</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_2011124243",
      "id": "20171102-153102_880120870",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133031"
    },
    {
      "title": "Tamaño del grafo",
      "text": "%pyspark\n\nverticesCount = graph.vertices.count()\n\nedgesCount = graph.edges.count()\n\nprint(f\"\"\"%table\nCantidad de usuarios \\t Cantidad de conecciones\n{verticesCount} \\t {edgesCount}\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:04:24+0000",
      "progress": 89,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Cantidad de usuarios ": "string",
                      " Cantidad de conecciones": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Cantidad de usuarios \t Cantidad de conecciones\n57138 \t 152613\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=44",
              "$$hashKey": "object:134361"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=45",
              "$$hashKey": "object:134362"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_1229942522",
      "id": "20171101-124845_773490911",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:04:24+0000",
      "dateFinished": "2022-11-12T00:04:44+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133032"
    },
    {
      "title": "Cantidad de conecciones por usuario",
      "text": "%pyspark\n\nnodesDegree = graph.degrees\n\nsortedByDegree = nodesDegree.orderBy(\"degree\", ascending=False)\n\nz.show(sortedByDegree.limit(10))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:04:55+0000",
      "progress": 89,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "title": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tdegree\nWinston_Dunhill\t2325\nfernandocarnota\t1745\nsantosjorgeh\t1657\nlanatoparatodos\t1529\nRobiBaradel\t1483\nJorgeFavaloro\t1483\nelcoya1977\t1471\neldestapeweb\t1441\nlucaslauriente\t1422\nbetovaldez\t1407\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=46",
              "$$hashKey": "object:134400"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_412256207",
      "id": "20171102-131720_1147432214",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:04:55+0000",
      "dateFinished": "2022-11-12T00:05:06+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133033"
    },
    {
      "text": "%md\n\n## Ejemplo Agregación de Mensajes\n\n### Influencia Colectiva\n\n#### Aplicaciones: \n* Marketing viral (influencia de opinión)\n* Detección de focos de dispersión de enfermedades\n* ...\n\n#### Cómo funciona:\n* Primero se calcula la **Influencia Colectiva (CI)**\n* En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes\n* Termina cuando la componente gigante se destruye\n* Solución básica: \\\\(O(N2)\\\\). Optimizada: \\\\(O(NlogN)\\\\)\n\n> Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) https://arxiv.org/abs/1506.08326\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Ejemplo Agregación de Mensajes</h2>\n<h3>Influencia Colectiva</h3>\n<h4>Aplicaciones:</h4>\n<ul>\n  <li>Marketing viral (influencia de opinión)</li>\n  <li>Detección de focos de dispersión de enfermedades</li>\n  <li>&hellip;</li>\n</ul>\n<h4>Cómo funciona:</h4>\n<ul>\n  <li>Primero se calcula la <strong>Influencia Colectiva (CI)</strong></li>\n  <li>En cada iteración elimina del grafo el nodo de mayor CI y recalcula el CI de los nodos restantes</li>\n  <li>Termina cuando la componente gigante se destruye</li>\n  <li>Solución básica: \\(O(N2)\\). Optimizada: \\(O(NlogN)\\)</li>\n</ul>\n<blockquote>\n  <p>Influence maximization in complex networks through optimal percolation” (Flaviano Morone, Hernán A. Makse, 27 Jun 2015) <a href=\"https://arxiv.org/abs/1506.08326\">https://arxiv.org/abs/1506.08326</a></p>\n</blockquote>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438075_1792830627",
      "id": "20171102-132006_1774167041",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133034"
    },
    {
      "text": "%md\n### Fórmula de CI\n\nLa formula de collective influence para un vértice \\\\(i\\\\) es:\n\n$$ CI(i) = (degree_i -  1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j -  1)$$\n\nSe supone un grafo **no dirigido**.\n\n### Pasos para calcular collective influence son:\n\n* agregar el grado (degree) de cada nodo al grafo.\n* importar `AggregateMessages`.\n* calcular collective influence de cada individuo usando `AggregateMessages` de `GraphFrame`\n* ordenar los individuos por su collective influence de mayor a menor\n* imprimir el listado de individuos\n\n\n#### Documentación para implementar con GraphFrames:\n\n* Documentación sobre [AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages) con ejemplo.\n* Documentación de [API AggregateMessages](https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html).\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Fórmula de CI</h3>\n<p>La formula de collective influence para un vértice \\(i\\) es:</p>\n<p>$$ CI(i) = (degree_i - 1) \\times \\sum\\limits_{j \\in vecinos(i)} (degree_j - 1)$$</p>\n<p>Se supone un grafo <strong>no dirigido</strong>.</p>\n<h3>Pasos para calcular collective influence son:</h3>\n<ul>\n  <li>agregar el grado (degree) de cada nodo al grafo.</li>\n  <li>importar <code>AggregateMessages</code>.</li>\n  <li>calcular collective influence de cada individuo usando <code>AggregateMessages</code> de <code>GraphFrame</code></li>\n  <li>ordenar los individuos por su collective influence de mayor a menor</li>\n  <li>imprimir el listado de individuos</li>\n</ul>\n<h4>Documentación para implementar con GraphFrames:</h4>\n<ul>\n  <li>Documentación sobre <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#message-passing-via-aggregatemessages\">AggregateMessages</a> con ejemplo.</li>\n  <li>Documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/api/python/graphframes.html\">API AggregateMessages</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_562902312",
      "id": "20171102-131904_821311339",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133035"
    },
    {
      "text": "%pyspark\n\nfrom pyspark.sql.functions import sum\nfrom graphframes.lib import AggregateMessages as AM\n\n#Creo un nuevo grafo con los nodos y su degree (disponible en nodesDegree) y las aristas originales\ndegreeGraph = GraphFrame(nodesDegree, graph.edges )\n# Aristas y vértices están bien particionadas\n\n\n# Comenzamos a calcular CI \n\n# Cada nodo envia su degree-1 a sus vecinos a traves de sus conecciones salientes y entrantes\nmsgToDst = AM.src[\"degree\"] - 1\nmsgToSrc = AM.dst[\"degree\"] - 1\n\n# El DataFrame sumNeighborDegrees debe tener 2 columnas: id del nodo y sum_neighbor_degree \nsumNeighborDegrees = degreeGraph.aggregateMessages(\n    sum(AM.msg).alias(\"sum_neighbor_degree\"), # Hace aggregation en cada nodo sobre los mensages recibidos \n    sendToDst=msgToDst, # Envia a vecino por coneccion saliente\n    sendToSrc=msgToSrc) # Envia a vecino por coneccion entrante\n\n\n# Join de sumNeighborDegrees con degrees para tener todas las columnas necesarias para calcular CI.\n\nnodesDegreeJoin = nodesDegree.join(sumNeighborDegrees,\"id\")\n\n# Calculamos CI: para terminar de calcularlo debemos multiplicar la sumatoria del paso anterior por degree - 1 de cada nodo.\n# El DataFrame collectiveInfluence debe tener 3 columnas: id, ci y degree\n# Por ultimo ordena descendentemente por ci \n\ncollectiveInfluence = nodesDegreeJoin \\\n                          .select( ((col(\"degree\") - 1) * col(\"sum_neighbor_degree\")).alias(\"ci\"), \n                                    \"id\", \n                                    \"degree\") \\\n                          .orderBy(\"ci\", ascending=False) \\\n                          .cache()\n\nz.show(collectiveInfluence.limit(20))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:05:35+0000",
      "progress": 31,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "ci": "string",
                      "id": "string",
                      "degree": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "ci\tid\tdegree\n71551312\tWinston_Dunhill\t2325\n57822552\tsantosjorgeh\t1657\n55026688\tfernandocarnota\t1745\n45848634\tJorgeFavaloro\t1483\n42052088\tlanatoparatodos\t1529\n37856910\telcoya1977\t1471\n33925374\tbetovaldez\t1407\n31175045\tLaBelgrana\t606\n30129480\tfargosi\t1271\n29494764\tRobiBaradel\t1483\n27043120\tcopi__\t1041\n23379462\tNunkMasKs\t1027\n18770024\tConCiencia2015\t533\n17316472\tWolffWaldo\t812\n16165470\tHugoYasky\t987\n15975882\tmis2centavos\t1020\n15693120\teldestapeweb\t1441\n15118908\tCarlos_AD_Viola\t533\n14284499\tCTAok\t830\n14149350\tEdgardoRovira\t1176\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=47",
              "$$hashKey": "object:134460"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=48",
              "$$hashKey": "object:134461"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=49",
              "$$hashKey": "object:134462"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=50",
              "$$hashKey": "object:134463"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=51",
              "$$hashKey": "object:134464"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=52",
              "$$hashKey": "object:134465"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_1366378246",
      "id": "20171101-125025_1054455316",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:05:35+0000",
      "dateFinished": "2022-11-12T00:06:47+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133036"
    },
    {
      "text": "%md\n## Motif Finding\n\n* Es un Domain-Specific Language (DSL) para expresar queries.\n* La unidad básica es la expresión de una arista\n\n### Ejemplos\n\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(a)\")` expresa vértices unidos en ambas direcciones.\n    - Devuelve un DataFrame con columnas `\"a\"`, `\"b\"`, `\"e\"` y `\"e2\"`.\n* `graph.find(\"(a)-[e]->(b); (b)-[e2]->(c)\")` expresa dos aristas pegadas con un vértice común `b`. \n\n### Documentacion y ejemplo\n\n* [GraphFrame User Guide](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Motif Finding</h2>\n<ul>\n  <li>Es un Domain-Specific Language (DSL) para expresar queries.</li>\n  <li>La unidad básica es la expresión de una arista</li>\n</ul>\n<h3>Ejemplos</h3>\n<ul>\n  <li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(a)&quot;)</code> expresa vértices unidos en ambas direcciones.\n    <ul>\n      <li>Devuelve un DataFrame con columnas <code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, <code>&quot;e&quot;</code> y <code>&quot;e2&quot;</code>.</li>\n    </ul>\n  </li>\n  <li><code>graph.find(&quot;(a)-[e]-&gt;(b); (b)-[e2]-&gt;(c)&quot;)</code> expresa dos aristas pegadas con un vértice común <code>b</code>.</li>\n</ul>\n<h3>Documentacion y ejemplo</h3>\n<ul>\n  <li><a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">GraphFrame User Guide</a>.</li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_553148882",
      "id": "20181027-013740_419047675",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133037"
    },
    {
      "text": "%md\n### Recordemos el grafo",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Recordemos el grafo</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_2134260008",
      "id": "paragraph_1634934672760_445886262",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133038"
    },
    {
      "text": "%pyspark\nz.show(g.vertices)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:06:56+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "id": "string",
                      "name": "string",
                      "age": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "id\tname\tage\na\tAlice\t34\nb\tBob\t36\nc\tCharlie\t30\nd\tDavid\t29\ne\tEsther\t32\nf\tFanny\t36\ng\tGabby\t60\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=53",
              "$$hashKey": "object:134535"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=54",
              "$$hashKey": "object:134536"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=55",
              "$$hashKey": "object:134537"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_193050459",
      "id": "paragraph_1634934258381_857174466",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:06:56+0000",
      "dateFinished": "2022-11-12T00:06:57+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133039"
    },
    {
      "text": "%pyspark\nz.show(g.edges)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:07:03+0000",
      "progress": 100,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "src": "string",
                      "dst": "string",
                      "relationship": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "src\tdst\trelationship\na\tb\tamigo\nb\tc\tsigue\nc\tb\tsigue\nf\tc\tsigue\ne\tf\tsigue\ne\td\tamigo\nd\ta\tamigo\na\te\tamigo\na\th\tamigo\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=56",
              "$$hashKey": "object:134577"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=57",
              "$$hashKey": "object:134578"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=58",
              "$$hashKey": "object:134579"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_1328789712",
      "id": "paragraph_1634934349934_2020230166",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:07:03+0000",
      "dateFinished": "2022-11-12T00:07:03+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133040"
    },
    {
      "text": "%md\n### Hagamos algunos queries",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 9,
        "editorHide": true,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Hagamos algunos queries</h3>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_1916836559",
      "id": "paragraph_1634934687488_918172403",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133041"
    },
    {
      "text": "%pyspark\n\n# Buscar pares de vértices en ambas direcciones:\nmotifs = g.find(\"(a)-[e1]->(b); (b)-[e2]->(a)\")\n\nmotifs.printSchema()\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:07:27+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "editorHide": false,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- a: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e1: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n |-- b: struct (nullable = false)\n |    |-- id: string (nullable = true)\n |    |-- name: string (nullable = true)\n |    |-- age: long (nullable = true)\n |-- e2: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- relationship: string (nullable = true)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_1352649630",
      "id": "20181027-015100_1394496292",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:07:27+0000",
      "dateFinished": "2022-11-12T00:07:27+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133042"
    },
    {
      "text": "%pyspark\n\nz.show(motifs)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:07:28+0000",
      "progress": 7,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n[b,Bob,36]\t[b,c,sigue]\t[c,Charlie,30]\t[c,b,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=59",
              "$$hashKey": "object:134645"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=60",
              "$$hashKey": "object:134646"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=61",
              "$$hashKey": "object:134647"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=62",
              "$$hashKey": "object:134648"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=63",
              "$$hashKey": "object:134649"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438076_2145874123",
      "id": "20181027-015533_344573808",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:07:28+0000",
      "dateFinished": "2022-11-12T00:07:38+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133043"
    },
    {
      "text": "%pyspark\n# Despues se pueden aplicar filtros para queries mas complejos.\nz.show(motifs.filter(\"b.age > 30\"))\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:09:42+0000",
      "progress": 5,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e1": "string",
                      "b": "string",
                      "e2": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te1\tb\te2\n[c,Charlie,30]\t[c,b,sigue]\t[b,Bob,36]\t[b,c,sigue]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=64",
              "$$hashKey": "object:134693"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=65",
              "$$hashKey": "object:134694"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=66",
              "$$hashKey": "object:134695"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=67",
              "$$hashKey": "object:134696"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=68",
              "$$hashKey": "object:134697"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_1811017269",
      "id": "20201030-112416_1681452862",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:09:42+0000",
      "dateFinished": "2022-11-12T00:09:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133044"
    },
    {
      "text": "%md\n## Visualización\n\nA continuación visualizaremos con [Gephi](https://gephi.org/) la parte del grafo (subgrafo) que contiene los mayores influencers.\n\nPara ello generaremos archivos *csv* como entrada de esta herramienta ",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h2>Visualización</h2>\n<p>A continuación visualizaremos con <a href=\"https://gephi.org/\">Gephi</a> la parte del grafo (subgrafo) que contiene los mayores influencers.</p>\n<p>Para ello generaremos archivos <em>csv</em> como entrada de esta herramienta</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_344131957",
      "id": "20171102-160936_360694508",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133045"
    },
    {
      "text": "%pyspark\n\nminCI = 29000000\nminDegree = 600\n\n# tomo los usarios con mayor influencia o con más conecciones\nciTops = collectiveInfluence \\\n    .filter((col(\"ci\") >= minCI) | (col(\"degree\") >= minDegree))\n\ngInfluencers = GraphFrame(ciTops, graph.edges)\n\n# Tomo solo las aristas que tengan vértices\nveTops = gInfluencers.find(\"(a)-[e]->(b)\") \\\n                .cache()\n      \n                \nprint(\"Cantidad de top influencers:\", veTops.count())\n\nveTops.printSchema()\nz.show(veTops)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:10:20+0000",
      "progress": 28,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "1": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e": "string",
                      "b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Cantidad de top influencers: 35\nroot\n |-- a: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n |-- e: struct (nullable = false)\n |    |-- src: string (nullable = true)\n |    |-- dst: string (nullable = true)\n |    |-- count_RT: long (nullable = true)\n |    |-- count_distinct_RT: long (nullable = false)\n |-- b: struct (nullable = false)\n |    |-- ci: long (nullable = true)\n |    |-- id: string (nullable = true)\n |    |-- degree: integer (nullable = false)\n\n\n"
          },
          {
            "type": "TABLE",
            "data": "a\te\tb\n[6501990,todonoticias,628]\t[todonoticias,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[71551312,Winston_Dunhill,2325]\t[Winston_Dunhill,LaBelgrana,340,2]\t[31175045,LaBelgrana,606]\n[33925374,betovaldez,1407]\t[betovaldez,LaBelgrana,510,3]\t[31175045,LaBelgrana,606]\n[30129480,fargosi,1271]\t[fargosi,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[17316472,WolffWaldo,812]\t[WolffWaldo,WolffWaldo,35,5]\t[17316472,WolffWaldo,812]\n[11720226,JonatanViale,723]\t[JonatanViale,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[16165470,HugoYasky,987]\t[HugoYasky,FernandezAnibal,13,1]\t[8618858,FernandezAnibal,822]\n[55026688,fernandocarnota,1745]\t[fernandocarnota,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[14284499,CTAok,830]\t[CTAok,CasaRosadaAR,36,2]\t[8123219,CasaRosadaAR,744]\n[23379462,NunkMasKs,1027]\t[NunkMasKs,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[9260920,infobae,681]\t[infobae,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[16165470,HugoYasky,987]\t[HugoYasky,CTAok,7,1]\t[14284499,CTAok,830]\n[14284499,CTAok,830]\t[CTAok,RobiBaradel,16,2]\t[29494764,RobiBaradel,1483]\n[14284499,CTAok,830]\t[CTAok,HugoYasky,10,2]\t[16165470,HugoYasky,987]\n[57822552,santosjorgeh,1657]\t[santosjorgeh,JorgeFavaloro,79,1]\t[45848634,JorgeFavaloro,1483]\n[29494764,RobiBaradel,1483]\t[RobiBaradel,HugoYasky,5,1]\t[16165470,HugoYasky,987]\n[16165470,HugoYasky,987]\t[HugoYasky,CasaRosadaAR,36,2]\t[8123219,CasaRosadaAR,744]\n[15975882,mis2centavos,1020]\t[mis2centavos,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[23379462,NunkMasKs,1027]\t[NunkMasKs,NunkMasKs,80,4]\t[23379462,NunkMasKs,1027]\n[15693120,eldestapeweb,1441]\t[eldestapeweb,anotherputo_,3,1]\t[2650266,anotherputo_,919]\n[16165470,HugoYasky,987]\t[HugoYasky,RobiBaradel,8,1]\t[29494764,RobiBaradel,1483]\n[42052088,lanatoparatodos,1529]\t[lanatoparatodos,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[9001440,luispagella,631]\t[luispagella,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[45848634,JorgeFavaloro,1483]\t[JorgeFavaloro,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[37856910,elcoya1977,1471]\t[elcoya1977,LaBelgrana,340,2]\t[31175045,LaBelgrana,606]\n[57822552,santosjorgeh,1657]\t[santosjorgeh,LaBelgrana,680,4]\t[31175045,LaBelgrana,606]\n[9260920,infobae,681]\t[infobae,fernandocarnota,12,1]\t[55026688,fernandocarnota,1745]\n[29494764,RobiBaradel,1483]\t[RobiBaradel,RobiBaradel,8,1]\t[29494764,RobiBaradel,1483]\n[29494764,RobiBaradel,1483]\t[RobiBaradel,CTAok,7,1]\t[14284499,CTAok,830]\n[8123219,CasaRosadaAR,744]\t[CasaRosadaAR,FernandezAnibal,39,3]\t[8618858,FernandezAnibal,822]\n[10199664,martintetaz,773]\t[martintetaz,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[55026688,fernandocarnota,1745]\t[fernandocarnota,fernandocarnota,24,2]\t[55026688,fernandocarnota,1745]\n[27043120,copi__,1041]\t[copi__,LaBelgrana,850,5]\t[31175045,LaBelgrana,606]\n[14284499,CTAok,830]\t[CTAok,FernandezAnibal,13,1]\t[8618858,FernandezAnibal,822]\n[15975882,mis2centavos,1020]\t[mis2centavos,mis2centavos,85,5]\t[15975882,mis2centavos,1020]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=69",
              "$$hashKey": "object:134758"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=70",
              "$$hashKey": "object:134759"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=71",
              "$$hashKey": "object:134760"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=72",
              "$$hashKey": "object:134761"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=73",
              "$$hashKey": "object:134762"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=74",
              "$$hashKey": "object:134763"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=75",
              "$$hashKey": "object:134764"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=76",
              "$$hashKey": "object:134765"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_140260174",
      "id": "20171102-000354_1806019706",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:10:20+0000",
      "dateFinished": "2022-11-12T00:10:26+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133046"
    },
    {
      "text": "%pyspark\n\neTops = veTops.select(\"e.*\")\n\neTops.printSchema()\n\n# Grafo de los tops\ngTops = GraphFrame(ciTops, eTops)\n\n\n# guardo un csv con los vertices para Gephi\n# Label es igual a la id\ngTops.vertices \\\n        .select(\"*\", col(\"id\").alias(\"Label\")) \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"logs/top_influencers.csv\", mode=\"overwrite\", header=True)\n\n# guardo un csv con las aristas para Gephi\ngTops.edges \\\n        .select(col(\"src\").alias(\"Source\"), \n                col(\"dst\").alias(\"Target\"), \n                \"count_RT\",\"count_distinct_RT\") \\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"logs/top_edges.csv\", mode=\"overwrite\", header=True)\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:10:38+0000",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "root\n |-- src: string (nullable = true)\n |-- dst: string (nullable = true)\n |-- count_RT: long (nullable = true)\n |-- count_distinct_RT: long (nullable = false)\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=77",
              "$$hashKey": "object:134796"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=78",
              "$$hashKey": "object:134797"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_1150986073",
      "id": "20181027-020144_852191582",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:10:38+0000",
      "dateFinished": "2022-11-12T00:10:40+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133047"
    },
    {
      "text": "%md\n### Gephi\n\nLanzar el programa desde una terminal ejecutando:\n\n```sh\ngephi-0.9.2/bin/gephi\n```\n\nSeguir las instrucciones del profesor.",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Gephi</h3>\n<p>Lanzar el programa desde una terminal ejecutando:</p>\n<pre><code class=\"language-sh\">gephi-0.9.2/bin/gephi\n</code></pre>\n<p>Seguir las instrucciones del profesor.</p>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_2067753922",
      "id": "20171102-161414_1207858851",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133048"
    },
    {
      "text": "%md\n### Ejercicio\n\nComplete el siguiente programa para calcular el grafo de todas las conexiones hacia los 8 mayores influenciadores (influencia colectiva) y graficar el resultado con Gephi. \n\n#### Ayuda\n* Busque en la documentación [Api Datasets](https://spark.apache.org/docs/2.4.8/api/python/pyspark.sql.html#pyspark.sql.DataFrame) algún método que devuelva las *n* primeras files de un Dataset equivalente a la directiva SQL `LIMIT`. \n* Para llenar el comando `find` busque la documentación de [Motif finding](https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding).",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "fontSize": 9,
        "results": {},
        "enabled": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<p>Complete el siguiente programa para calcular el grafo de todas las conexiones hacia los 8 mayores influenciadores (influencia colectiva) y graficar el resultado con Gephi.</p>\n<h4>Ayuda</h4>\n<ul>\n<li>Busque en la documentación <a href=\"https://spark.apache.org/docs/2.4.8/api/python/pyspark.sql.html#pyspark.sql.DataFrame\">Api Datasets</a> algún método que devuelva las <em>n</em> primeras files de un Dataset equivalente a la directiva SQL <code>LIMIT</code>.</li>\n<li>Para llenar el comando <code>find</code> busque la documentación de <a href=\"https://graphframes.github.io/graphframes/docs/_site/user-guide.html#motif-finding\">Motif finding</a>.</li>\n</ul>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_648345471",
      "id": "20171102-110542_600666434",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133049"
    },
    {
      "text": "%pyspark\n\ntopInfluencers = collectiveInfluence.orderBy(collectiveInfluence.ci.desc()).limit(8)  # solo los 8 primeros\n\ngTops2 = GraphFrame(topInfluencers, graph.edges)\n\n# Solo las aristas que van los tops\nres1 = gTops2.find(\"(a)-[e]->(b)\")\n\neTops2 = res1.select(\"e.src\", \"e.dst\")\n\n# Junto todos los vertices de las aristas\nvTops2s = eTops2.select(col(\"src\").alias(\"id\"))\nvTops2d = eTops2.select(col(\"dst\").alias(\"id\"))\nvTops2sd = vTops2s.union(vTops2d)\n\nvTops2 = vTops2sd.join(collectiveInfluence, \"id\", \"left\").distinct()\n\nvTops2.select(\"*\", col(\"id\").alias(\"Label\"))\\\n        .coalesce(1) \\\n        .write \\\n        .csv(\"logs/top_influencers2.csv\", mode=\"overwrite\", header=True)\n\n\neTops2.withColumnRenamed(\"src\", \"Source\")\\\n    .withColumnRenamed(\"dst\", \"Target\")\\\n    .coalesce(1)\\\n    .write \\\n    .csv(\"logs/top_edges2.csv\", mode=\"overwrite\", header=True)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:12:32+0000",
      "progress": 12,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=79",
              "$$hashKey": "object:134835"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=80",
              "$$hashKey": "object:134836"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=81",
              "$$hashKey": "object:134837"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=82",
              "$$hashKey": "object:134838"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=83",
              "$$hashKey": "object:134839"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=84",
              "$$hashKey": "object:134840"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=85",
              "$$hashKey": "object:134841"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438077_373304050",
      "id": "paragraph_1666384803023_696454822",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T00:12:32+0000",
      "dateFinished": "2022-11-12T00:12:43+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133050"
    },
    {
      "text": "%pyspark\nz.show(res1)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T00:12:59+0000",
      "progress": 6,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "a": "string",
                      "e": "string",
                      "b": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "a\te\tb\n[71551312,Winston_Dunhill,2325]\t[Winston_Dunhill,LaBelgrana,340,2]\t[31175045,LaBelgrana,606]\n[33925374,betovaldez,1407]\t[betovaldez,LaBelgrana,510,3]\t[31175045,LaBelgrana,606]\n[55026688,fernandocarnota,1745]\t[fernandocarnota,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[57822552,santosjorgeh,1657]\t[santosjorgeh,JorgeFavaloro,79,1]\t[45848634,JorgeFavaloro,1483]\n[42052088,lanatoparatodos,1529]\t[lanatoparatodos,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[45848634,JorgeFavaloro,1483]\t[JorgeFavaloro,LaBelgrana,170,1]\t[31175045,LaBelgrana,606]\n[37856910,elcoya1977,1471]\t[elcoya1977,LaBelgrana,340,2]\t[31175045,LaBelgrana,606]\n[57822552,santosjorgeh,1657]\t[santosjorgeh,LaBelgrana,680,4]\t[31175045,LaBelgrana,606]\n[55026688,fernandocarnota,1745]\t[fernandocarnota,fernandocarnota,24,2]\t[55026688,fernandocarnota,1745]\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=86",
              "$$hashKey": "object:134889"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=87",
              "$$hashKey": "object:134890"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=88",
              "$$hashKey": "object:134891"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=89",
              "$$hashKey": "object:134892"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=90",
              "$$hashKey": "object:134893"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=91",
              "$$hashKey": "object:134894"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=92",
              "$$hashKey": "object:134895"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668121398635_246281938",
      "id": "paragraph_1668121398635_246281938",
      "dateCreated": "2022-11-10T23:03:18+0000",
      "dateStarted": "2022-11-12T00:12:59+0000",
      "dateFinished": "2022-11-12T00:13:02+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133051"
    },
    {
      "text": "%md\n### Ejercicio\n\n0. Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario *A* retuitea a *B* que retuitea a *C* que retuitea a *A*.\n\n0. Hay casos donde los tres usuarios sean distintos?\n\n0. Graficar con Gephi el resultado.\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T17:04:47+0000",
      "progress": 0,
      "config": {
        "tableHide": false,
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "fontSize": 12,
        "editorHide": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h3>Ejercicio</h3>\n<ol start=\"0\">\n<li>\n<p>Tomar el grafo de tweets y crear un dataframe con todas las aristas y vértices que forman triángulos dirigidos. O sea, todos los casos donde un usuario <em>A</em> retuitea a <em>B</em> que retuitea a <em>C</em> que retuitea a <em>A</em>.</p>\n</li>\n<li>\n<p>Hay casos donde los tres usuarios sean distintos?</p>\n</li>\n<li>\n<p>Graficar con Gephi el resultado.</p>\n</li>\n</ol>\n\n</div>"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438078_982892480",
      "id": "20201030-122513_420199213",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "dateStarted": "2022-11-12T17:04:47+0000",
      "dateFinished": "2022-11-12T17:04:48+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133052"
    },
    {
      "text": "%pyspark\r\n#Construimos el graphframe\r\ntwitterConnections = tweets \\\r\n                        .groupBy(\"user\", \"RT_by\") \\\r\n                        .agg(sum(\"RT_times\").alias(\"count_RT\"), count(\"*\").alias(\"count_distinct_RT\"))\r\n                        \r\nedgesDF = twitterConnections \\\r\n    .select(col(\"user\").alias(\"src\"), \r\n            col(\"RT_by\").alias(\"dst\"),\r\n            \"count_RT\", \"count_distinct_RT\")\r\n\r\nsrcs = edgesDF.select(col(\"src\").alias(\"id\"))\r\ndsts = edgesDF.select(col(\"dst\").alias(\"id\"))\r\nvertexDF = srcs.unionAll(dsts).distinct()\r\ngraphT = GraphFrame(vertexDF, edgesDF).cache()\r\n\r\n# Solo las aristas y vértices que forman triángulos dirigidos\r\ntriang = graphT.find(\"(a)-[ab]->(b); (b)-[bc]->(c); (c)-[ca]->(a)\")\r\ntriang_uni = triang.filter(\"a.id != b.id and b.id != c.id and c.id != a.id\")\r\n\r\n# Alternativa para filtrar:\r\n#triang_uni = triang.filter(\"a.id != b.id\").filter(\"b.id != c.id\").filter(\"c.id != a.id\")\r\n\r\ne1 = triang_uni.select(\"ab.src\", \"ab.dst\")\r\ne2 = triang_uni.select(\"bc.src\", \"bc.dst\")\r\ne3 = triang_uni.select(\"ca.src\", \"ca.dst\")\r\ne1_2 = e1.union(e2)\r\ne = e1_2.union(e3).distinct().filter(\"src != dst\")\r\n\r\n# Junto todos los vertices de las aristas\r\nvs = e.select(col(\"src\").alias(\"id\"))\r\nvd = e.select(col(\"dst\").alias(\"id\"))\r\nvsd = vs.union(vd).distinct()\r\n\r\nv = vsd.join(collectiveInfluence, \"id\", \"left\").distinct()\r\n\r\nv.select(\"*\", col(\"id\").alias(\"Label\"))\\\r\n        .coalesce(1) \\\r\n        .write \\\r\n        .csv(\"logs/dir_influencers.csv\", mode=\"overwrite\", header=True)\r\n\r\ne.withColumnRenamed(\"src\", \"Source\")\\\r\n    .withColumnRenamed(\"dst\", \"Target\")\\\r\n    .coalesce(1)\\\r\n    .write \\\r\n    .csv(\"logs/dir_edges.csv\", mode=\"overwrite\", header=True)",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T16:04:05+0000",
      "progress": 98,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 14,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=192",
              "$$hashKey": "object:134931"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=193",
              "$$hashKey": "object:134932"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=194",
              "$$hashKey": "object:134933"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=195",
              "$$hashKey": "object:134934"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=196",
              "$$hashKey": "object:134935"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=197",
              "$$hashKey": "object:134936"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=198",
              "$$hashKey": "object:134937"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=199",
              "$$hashKey": "object:134938"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=200",
              "$$hashKey": "object:134939"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=201",
              "$$hashKey": "object:134940"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=202",
              "$$hashKey": "object:134941"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=203",
              "$$hashKey": "object:134942"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=204",
              "$$hashKey": "object:134943"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=205",
              "$$hashKey": "object:134944"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=206",
              "$$hashKey": "object:134945"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=207",
              "$$hashKey": "object:134946"
            },
            {
              "jobUrl": "http://localhost:4040/jobs/job?id=208",
              "$$hashKey": "object:134947"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668212904412_65409445",
      "id": "paragraph_1668212904412_65409445",
      "dateCreated": "2022-11-12T00:28:24+0000",
      "dateStarted": "2022-11-12T01:23:38+0000",
      "dateFinished": "2022-11-12T01:24:12+0000",
      "status": "FINISHED",
      "$$hashKey": "object:133053"
    },
    {
      "text": "%md\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-12T17:05:03+0000",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 14,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1668272703234_897644721",
      "id": "paragraph_1668272703234_897644721",
      "dateCreated": "2022-11-12T17:05:03+0000",
      "status": "READY",
      "focus": true,
      "$$hashKey": "object:144401"
    },
    {
      "title": "FIN",
      "text": "val baseDir=\"https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\"\n\nz.put(\"baseDir\", baseDir)\nprint(\"\"\"%html\n<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "2022-11-06T21:17:18+0000",
      "progress": 0,
      "config": {
        "tableHide": true,
        "editorSetting": {
          "language": "scala"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "fontSize": 9,
        "title": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "baseDir: String = https://git.cs.famaf.unc.edu.ar/dbarsotti/diplodatos_bigdata/raw/master/clases\n"
          },
          {
            "type": "HTML",
            "data": "<script>\n    var heads = document.getElementsByTagName('h2');\n    var numHeads = heads.length;\n    var inner = \"\";\n    var i = 0;\n    var j = 0;\n    while (i < numHeads){\n        inner = heads[i].innerHTML;\n        if (inner.search(\".-\") != -1 ) {\n            j++;\n            heads[i].innerHTML = inner.replace(/(~|\\d+)\\.-/,\"\"+j+\".-\");\n        }\n        i++\n    }\n</script>\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1667769438078_416246082",
      "id": "20171010-191336_1667301043",
      "dateCreated": "2022-11-06T21:17:18+0000",
      "status": "READY",
      "$$hashKey": "object:133055"
    }
  ],
  "name": "Clase 07 - Grandes Grafos Sociales",
  "id": "2HHW6BQ3Y",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.0",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/Clase 07 - Grandes Grafos Sociales"
}